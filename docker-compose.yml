version: '3'

services:
  ## services on which other services depend on
  vault:
    image: vault:1.13.3
    restart: always
    volumes:
      - ./vault/vault.json:/vault/config/vault.json
      - vault-data:/vault/file
    environment:
      - VAULT_ADDR=http://0.0.0.0:8200
      - VAULT_API_ADDR=http://0.0.0.0:8200
      - VAULT_ADDRESS=http://0.0.0.0:8200
    cap_add:
      - IPC_LOCK
    command: vault server -config=/vault/config/vault.json
    ports:
      - 8200:8200
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "wget --spider http://127.0.0.1:8200/v1/sys/health || exit 1"
        ]
      interval: 10s
      timeout: 5s
      retries: 3

  identity-db:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - identity-db-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  credential-db:
    image: postgres:12
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
    volumes:
      - credential-db-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  schema-db:
    image: postgres:12
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
    volumes:
      - schema-db-data:/var/lib/postgresql/data
    # ports:
    #   - 5432:5432
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  ## core rcw services
  identity-service:
    image: 'ghcr.io/samagrax-rcw/identity:latest'
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      identity-db:
        condition: service_healthy
      # vault:
      #   condition: service_healthy
    ports:
      - 5003:3332
    environment:
      DATABASE_URL: "postgres://postgres:postgres@identity-db:5432/postgres"
      VAULT_ADDR: "http://vault:8200"
      # This will be replaced automatically on initialisation 
      # make compose-init will call setup_vault.sh
      VAULT_TOKEN: hvs.ZBCv64FQYZibBmfa6cgcc8ls
      VAULT_BASE_URL: "http://vault:8200/v1"
      VAULT_ROOT_PATH: "http://vault:8200/v1/kv"
      VAULT_TIMEOUT: 5000
      VAULT_PROXY: 'false'
      SIGNING_ALGORITHM: "RS256"
      JWKS_URI:
      ENABLE_AUTH: "false"
    command: ["bash", "./build/setup_vault.sh"]
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -f http://localhost:3332/health || exit 1"
        ]
      interval: 10s
      timeout: 5s
      retries: 5

  schema-service:
    image: 'ghcr.io/samagrax-rcw/schema:latest'
    build: .
    depends_on:
      schema-db:
        condition: service_healthy
    ports:
      - 5002:3333
    environment:
      DATABASE_URL: postgres://postgres:postgres@schema-db:5432/postgres
      IDENTITY_BASE_URL: "http://identity:3332"
      ENABLE_AUTH: "false"
  
  credentials-service:
    image: 'ghcr.io/samagrax-rcw/credential:v0.0.2'
    build: .
    depends_on:
      credential-db:
        condition: service_healthy
    ports:
      - 5001:3000
    environment:
      DATABASE_URL: postgres://postgres:postgres@credential-db:5432/postgres
      IDENTITY_BASE_URL: 
      SCHEMA_BASE_URL: 
      ENABLE_AUTH: "false"
      JWKS_URI: ""
      SIGNING_ALGORITHM: "RS256"
    healthcheck:
      test:
        [ "CMD-SHELL", "curl -f http://localhost:3000/health || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      rcw-test:
      default:

volumes:
  vault-data:
  identity-db-data:
  schema-db-data:
  credential-db-data:

networks:
  rcw-test:
    external: true